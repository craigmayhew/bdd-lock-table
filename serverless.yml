service: bdd-lock-table-${opt:stackName, 'dev'}

provider:
  name: aws
  runtime: python3.7
  region: eu-west-2
  environment:
    BDD_LOCK_TABLE_NAME: bddLockTable-${opt:stackName, 'dev'}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
      Resource:
        - "Fn::GetAtt": [bddLockTable, Arn]
    - Effect: Allow
      Action:
        - dynamodb:Query
      Resource:
        - !Join
          - "/"
          - - "Fn::GetAtt": [bddLockTable, Arn]
            - "index"
            - "*"

functions:
  create-stack:
    handler: src/create_stack.create
    events:
      - http:
          method: POST
          path: create-stack
  get-available:
    handler: src/get_available.query
    events:
      - http:
          method: POST
          path: get-available

resources:
    Resources:
      bddLockTable: 
        Type: AWS::DynamoDB::Table
        Properties:
          TableName: ${self:provider.environment.BDD_LOCK_TABLE_NAME}
          AttributeDefinitions:
            - AttributeName: stackName
              AttributeType: S
            - AttributeName: repoName
              AttributeType: S
            - AttributeName: isAvailable
              AttributeType: S
          KeySchema:
            - AttributeName: stackName
              KeyType: HASH
          GlobalSecondaryIndexes:
            - IndexName: "availableByRepoIndex"
              KeySchema:
                - AttributeName: "repoName"
                  KeyType: "HASH"
                - AttributeName: "isAvailable"
                  KeyType: "RANGE"
              Projection:
                ProjectionType: KEYS_ONLY
          BillingMode: PAY_PER_REQUEST
